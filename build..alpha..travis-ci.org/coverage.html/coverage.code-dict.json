{"/home/travis/build/npmtest/node-npmtest-table/test.js":"/* istanbul instrument in package npmtest_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-table/lib.npmtest_table.js":"/* istanbul instrument in package npmtest_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_table = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_table = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-table/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-table && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_table */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_table\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_table.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_table.rollup.js'] =\n            local.assetsDict['/assets.npmtest_table.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_table.__dirname + '/lib.npmtest_table.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getBorderCharacters = exports.createStream = exports.table = undefined;\n\nvar _table = require('./table');\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _createStream = require('./createStream');\n\nvar _createStream2 = _interopRequireDefault(_createStream);\n\nvar _getBorderCharacters = require('./getBorderCharacters');\n\nvar _getBorderCharacters2 = _interopRequireDefault(_getBorderCharacters);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.table = _table2.default;\nexports.createStream = _createStream2.default;\nexports.getBorderCharacters = _getBorderCharacters2.default;","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/table.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _drawTable = require('./drawTable');\n\nvar _drawTable2 = _interopRequireDefault(_drawTable);\n\nvar _calculateCellWidthIndex = require('./calculateCellWidthIndex');\n\nvar _calculateCellWidthIndex2 = _interopRequireDefault(_calculateCellWidthIndex);\n\nvar _makeConfig = require('./makeConfig');\n\nvar _makeConfig2 = _interopRequireDefault(_makeConfig);\n\nvar _calculateRowHeightIndex = require('./calculateRowHeightIndex');\n\nvar _calculateRowHeightIndex2 = _interopRequireDefault(_calculateRowHeightIndex);\n\nvar _mapDataUsingRowHeightIndex = require('./mapDataUsingRowHeightIndex');\n\nvar _mapDataUsingRowHeightIndex2 = _interopRequireDefault(_mapDataUsingRowHeightIndex);\n\nvar _alignTableData = require('./alignTableData');\n\nvar _alignTableData2 = _interopRequireDefault(_alignTableData);\n\nvar _padTableData = require('./padTableData');\n\nvar _padTableData2 = _interopRequireDefault(_padTableData);\n\nvar _validateTableData = require('./validateTableData');\n\nvar _validateTableData2 = _interopRequireDefault(_validateTableData);\n\nvar _stringifyTableData = require('./stringifyTableData');\n\nvar _stringifyTableData2 = _interopRequireDefault(_stringifyTableData);\n\nvar _truncateTableData = require('./truncateTableData');\n\nvar _truncateTableData2 = _interopRequireDefault(_truncateTableData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {string} table~cell\n */\n\n/**\n * @typedef {table~cell[]} table~row\n */\n\n/**\n * @typedef {Object} table~columns\n * @property {string} alignment Cell content alignment (enum: left, center, right) (default: left).\n * @property {number} width Column width (default: auto).\n * @property {number} truncate Number of characters are which the content will be truncated (default: Infinity).\n * @property {number} paddingLeft Cell content padding width left (default: 1).\n * @property {number} paddingRight Cell content padding width right (default: 1).\n */\n\n/**\n * @typedef {Object} table~border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * Used to tell whether to draw a horizontal line.\n * This callback is called for each non-content line of the table.\n * The default behavior is to always return true.\n *\n * @typedef {Function} drawHorizontalLine\n * @param {number} index\n * @param {number} size\n * @returns {boolean}\n */\n\n/**\n * @typedef {Object} table~config\n * @property {table~border} border\n * @property {table~columns[]} columns Column specific configuration.\n * @property {table~columns} columnDefault Default values for all columns. Column specific settings overwrite the default values.\n * @property {table~drawHorizontalLine} drawHorizontalLine\n */\n\n/**\n * Generates a text table.\n *\n * @param {table~row[]} data\n * @param {table~config} userConfig\n * @returns {string}\n */\nexports.default = function (data) {\n  let userConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  let rows;\n\n  (0, _validateTableData2.default)(data);\n\n  rows = (0, _stringifyTableData2.default)(data);\n\n  const config = (0, _makeConfig2.default)(rows, userConfig);\n\n  rows = (0, _truncateTableData2.default)(data, config);\n\n  const rowHeightIndex = (0, _calculateRowHeightIndex2.default)(rows, config);\n\n  rows = (0, _mapDataUsingRowHeightIndex2.default)(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData2.default)(rows, config);\n  rows = (0, _padTableData2.default)(rows, config);\n\n  const cellWidthIndex = (0, _calculateCellWidthIndex2.default)(rows[0]);\n\n  return (0, _drawTable2.default)(rows, config.border, cellWidthIndex, rowHeightIndex, config.drawHorizontalLine);\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/drawTable.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _drawBorder = require('./drawBorder');\n\nvar _drawRow = require('./drawRow');\n\nvar _drawRow2 = _interopRequireDefault(_drawRow);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} rows\n * @param {Object} border\n * @param {Array} columnSizeIndex\n * @param {Array} rowSpanIndex\n * @param {Function} drawHorizontalLine\n * @returns {string}\n */\nexports.default = (rows, border, columnSizeIndex, rowSpanIndex, drawHorizontalLine) => {\n  let output, realRowIndex, rowHeight;\n\n  const rowCount = rows.length;\n\n  realRowIndex = 0;\n\n  output = '';\n\n  if (drawHorizontalLine(realRowIndex, rowCount)) {\n    output += (0, _drawBorder.drawBorderTop)(columnSizeIndex, border);\n  }\n\n  _lodash2.default.forEach(rows, (row, index0) => {\n    output += (0, _drawRow2.default)(row, border);\n\n    if (!rowHeight) {\n      rowHeight = rowSpanIndex[realRowIndex];\n\n      realRowIndex++;\n    }\n\n    rowHeight--;\n\n    if (rowHeight === 0 && index0 !== rowCount - 1 && drawHorizontalLine(realRowIndex, rowCount)) {\n      output += (0, _drawBorder.drawBorderJoin)(columnSizeIndex, border);\n    }\n  });\n\n  if (drawHorizontalLine(realRowIndex, rowCount)) {\n    output += (0, _drawBorder.drawBorderBottom)(columnSizeIndex, border);\n  }\n\n  return output;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/drawBorder.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.drawBorderTop = exports.drawBorderJoin = exports.drawBorderBottom = exports.drawBorder = undefined;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef drawBorder~parts\n * @property {string} left\n * @property {string} right\n * @property {string} body\n * @property {string} join\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorder~parts} parts\n * @returns {string}\n */\nconst drawBorder = (columnSizeIndex, parts) => {\n  const columns = _lodash2.default.map(columnSizeIndex, size => {\n    return _lodash2.default.repeat(parts.body, size);\n  }).join(parts.join);\n\n  return parts.left + columns + parts.right + '\\n';\n};\n\n/**\n * @typedef drawBorderTop~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderTop~parts} parts\n * @returns {string}\n */\nconst drawBorderTop = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.topBody,\n    join: parts.topJoin,\n    left: parts.topLeft,\n    right: parts.topRight\n  });\n};\n\n/**\n * @typedef drawBorderJoin~parts\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinBody\n * @property {string} joinJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderJoin~parts} parts\n * @returns {string}\n */\nconst drawBorderJoin = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.joinBody,\n    join: parts.joinJoin,\n    left: parts.joinLeft,\n    right: parts.joinRight\n  });\n};\n\n/**\n * @typedef drawBorderBottom~parts\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} topBody\n * @property {string} topJoin\n */\n\n/**\n * @param {number[]} columnSizeIndex\n * @param {drawBorderBottom~parts} parts\n * @returns {string}\n */\nconst drawBorderBottom = (columnSizeIndex, parts) => {\n  return drawBorder(columnSizeIndex, {\n    body: parts.bottomBody,\n    join: parts.bottomJoin,\n    left: parts.bottomLeft,\n    right: parts.bottomRight\n  });\n};\n\nexports.drawBorder = drawBorder;\nexports.drawBorderBottom = drawBorderBottom;\nexports.drawBorderJoin = drawBorderJoin;\nexports.drawBorderTop = drawBorderTop;","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/drawRow.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * @typedef {Object} drawRow~border\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n */\n\n/**\n * @param {number[]} columns\n * @param {drawRow~border} border\n * @returns {string}\n */\nexports.default = (columns, border) => {\n  return border.bodyLeft + columns.join(border.bodyJoin) + border.bodyRight + '\\n';\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/calculateCellWidthIndex.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calculates width of each cell contents.\n *\n * @param {string[]} cells\n * @returns {number[]}\n */\nexports.default = cells => {\n  return _lodash2.default.map(cells, value => {\n    return (0, _stringWidth2.default)(value);\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/makeConfig.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _getBorderCharacters = require('./getBorderCharacters');\n\nvar _getBorderCharacters2 = _interopRequireDefault(_getBorderCharacters);\n\nvar _validateConfig = require('./validateConfig');\n\nvar _validateConfig2 = _interopRequireDefault(_validateConfig);\n\nvar _calculateMaximumColumnWidthIndex = require('./calculateMaximumColumnWidthIndex');\n\nvar _calculateMaximumColumnWidthIndex2 = _interopRequireDefault(_calculateMaximumColumnWidthIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {Object} border\n * @returns {Object}\n */\nconst makeBorder = function makeBorder() {\n  let border = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _lodash2.default.assign({}, (0, _getBorderCharacters2.default)('honeywell'), border);\n};\n\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {Array[]} rows\n * @param {Object} columns\n * @param {Object} columnDefault\n * @returns {Object}\n */\nconst makeColumns = function makeColumns(rows) {\n  let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let columnDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  const maximumColumnWidthIndex = (0, _calculateMaximumColumnWidthIndex2.default)(rows);\n\n  _lodash2.default.times(rows[0].length, index => {\n    if (_lodash2.default.isUndefined(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = _lodash2.default.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      width: maximumColumnWidthIndex[index],\n      wrapWord: false\n    }, columnDefault, columns[index]);\n  });\n\n  return columns;\n};\n\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {Array[]} rows\n * @param {Object} userConfig\n * @returns {Object}\n */\n\nexports.default = function (rows) {\n  let userConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  (0, _validateConfig2.default)('config.json', userConfig);\n\n  const config = _lodash2.default.cloneDeep(userConfig);\n\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(rows, config.columns, config.columnDefault);\n\n  if (!config.drawHorizontalLine) {\n    /**\n     * @returns {boolean}\n     */\n    config.drawHorizontalLine = () => {\n      return true;\n    };\n  }\n\n  return config;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/getBorderCharacters.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/* eslint-disable sort-keys */\n\n/**\n * @typedef border\n * @property {string} topBody\n * @property {string} topJoin\n * @property {string} topLeft\n * @property {string} topRight\n * @property {string} bottomBody\n * @property {string} bottomJoin\n * @property {string} bottomLeft\n * @property {string} bottomRight\n * @property {string} bodyLeft\n * @property {string} bodyRight\n * @property {string} bodyJoin\n * @property {string} joinBody\n * @property {string} joinLeft\n * @property {string} joinRight\n * @property {string} joinJoin\n */\n\n/**\n * @param {string} name\n * @returns {border}\n */\nexports.default = name => {\n  if (name === 'honeywell') {\n    return {\n      topBody: '═',\n      topJoin: '╤',\n      topLeft: '╔',\n      topRight: '╗',\n\n      bottomBody: '═',\n      bottomJoin: '╧',\n      bottomLeft: '╚',\n      bottomRight: '╝',\n\n      bodyLeft: '║',\n      bodyRight: '║',\n      bodyJoin: '│',\n\n      joinBody: '─',\n      joinLeft: '╟',\n      joinRight: '╢',\n      joinJoin: '┼'\n    };\n  }\n\n  if (name === 'norc') {\n    return {\n      topBody: '─',\n      topJoin: '┬',\n      topLeft: '┌',\n      topRight: '┐',\n\n      bottomBody: '─',\n      bottomJoin: '┴',\n      bottomLeft: '└',\n      bottomRight: '┘',\n\n      bodyLeft: '│',\n      bodyRight: '│',\n      bodyJoin: '│',\n\n      joinBody: '─',\n      joinLeft: '├',\n      joinRight: '┤',\n      joinJoin: '┼'\n    };\n  }\n\n  if (name === 'ramac') {\n    return {\n      topBody: '-',\n      topJoin: '+',\n      topLeft: '+',\n      topRight: '+',\n\n      bottomBody: '-',\n      bottomJoin: '+',\n      bottomLeft: '+',\n      bottomRight: '+',\n\n      bodyLeft: '|',\n      bodyRight: '|',\n      bodyJoin: '|',\n\n      joinBody: '-',\n      joinLeft: '|',\n      joinRight: '|',\n      joinJoin: '|'\n    };\n  }\n\n  if (name === 'void') {\n    return {\n      topBody: '',\n      topJoin: '',\n      topLeft: '',\n      topRight: '',\n\n      bottomBody: '',\n      bottomJoin: '',\n      bottomLeft: '',\n      bottomRight: '',\n\n      bodyLeft: '',\n      bodyRight: '',\n      bodyJoin: '',\n\n      joinBody: '',\n      joinLeft: '',\n      joinRight: '',\n      joinJoin: ''\n    };\n  }\n\n  throw new Error('Unknown border template \"' + name + '\".');\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/validateConfig.js":"'use strict';\nvar equal = require('ajv/lib/compile/equal');\nvar validate = (function() {\n  var pattern0 = new RegExp('^[0-9]+$');\n  var refVal = [];\n  var refVal1 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || validate.schema.properties[key0]);\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        if (data.topBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal2(data.topBody, (dataPath || '') + '.topBody', data, 'topBody', rootData)) {\n            if (vErrors === null) vErrors = refVal2.errors;\n            else vErrors = vErrors.concat(refVal2.errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topJoin, (dataPath || '') + '.topJoin', data, 'topJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topLeft, (dataPath || '') + '.topLeft', data, 'topLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.topRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.topRight, (dataPath || '') + '.topRight', data, 'topRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomBody, (dataPath || '') + '.bottomBody', data, 'bottomBody', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomJoin, (dataPath || '') + '.bottomJoin', data, 'bottomJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomLeft, (dataPath || '') + '.bottomLeft', data, 'bottomLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bottomRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bottomRight, (dataPath || '') + '.bottomRight', data, 'bottomRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyLeft, (dataPath || '') + '.bodyLeft', data, 'bodyLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyRight, (dataPath || '') + '.bodyRight', data, 'bodyRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.bodyJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.bodyJoin, (dataPath || '') + '.bodyJoin', data, 'bodyJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinBody !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinBody, (dataPath || '') + '.joinBody', data, 'joinBody', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinLeft !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinLeft, (dataPath || '') + '.joinLeft', data, 'joinLeft', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinRight !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinRight, (dataPath || '') + '.joinRight', data, 'joinRight', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.joinJoin !== undefined) {\n          var errs_1 = errors;\n          if (!refVal[2](data.joinJoin, (dataPath || '') + '.joinJoin', data, 'joinJoin', rootData)) {\n            if (vErrors === null) vErrors = refVal[2].errors;\n            else vErrors = vErrors.concat(refVal[2].errors);\n            errors = vErrors.length;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal1.schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"topBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"topRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bottomRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"bodyJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinBody\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinLeft\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinRight\": {\n        \"$ref\": \"#/definitions/border\"\n      },\n      \"joinJoin\": {\n        \"$ref\": \"#/definitions/border\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal1.errors = null;\n  refVal[1] = refVal1;\n  var refVal2 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if (typeof data !== \"string\") {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'string'\n          },\n          message: 'should be string'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal2.schema = {\n    \"type\": \"string\"\n  };\n  refVal2.errors = null;\n  refVal[2] = refVal2;\n  var refVal3 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || pattern0.test(key0));\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        for (var key0 in data) {\n          if (pattern0.test(key0)) {\n            var errs_1 = errors;\n            if (!refVal4(data[key0], (dataPath || '') + '[\\'' + key0 + '\\']', data, key0, rootData)) {\n              if (vErrors === null) vErrors = refVal4.errors;\n              else vErrors = vErrors.concat(refVal4.errors);\n              errors = vErrors.length;\n            }\n            var valid1 = errors === errs_1;\n          }\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal3.schema = {\n    \"type\": \"object\",\n    \"patternProperties\": {\n      \"^[0-9]+$\": {\n        \"$ref\": \"#/definitions/column\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal3.errors = null;\n  refVal[3] = refVal3;\n  var refVal4 = (function() {\n    var pattern0 = new RegExp('^[0-9]+$');\n    return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n      'use strict';\n      var vErrors = null;\n      var errors = 0;\n      if (rootData === undefined) rootData = data;\n      if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n        var errs__0 = errors;\n        var valid1 = true;\n        for (var key0 in data) {\n          var isAdditional0 = !(false || validate.schema.properties[key0]);\n          if (isAdditional0) {\n            valid1 = false;\n            var err = {\n              keyword: 'additionalProperties',\n              dataPath: (dataPath || '') + \"\",\n              schemaPath: '#/additionalProperties',\n              params: {\n                additionalProperty: '' + key0 + ''\n              },\n              message: 'should NOT have additional properties'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n        }\n        var data1 = data.alignment;\n        if (data1 !== undefined) {\n          var errs_1 = errors;\n          var schema1 = validate.schema.properties.alignment.enum;\n          var valid1;\n          valid1 = false;\n          for (var i1 = 0; i1 < schema1.length; i1++)\n            if (equal(data1, schema1[i1])) {\n              valid1 = true;\n              break;\n            }\n          if (!valid1) {\n            var err = {\n              keyword: 'enum',\n              dataPath: (dataPath || '') + '.alignment',\n              schemaPath: '#/properties/alignment/enum',\n              params: {\n                allowedValues: schema1\n              },\n              message: 'should be equal to one of the allowed values'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          if (typeof data1 !== \"string\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.alignment',\n              schemaPath: '#/properties/alignment/type',\n              params: {\n                type: 'string'\n              },\n              message: 'should be string'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.width !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.width !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.width',\n              schemaPath: '#/properties/width/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.wrapWord !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.wrapWord !== \"boolean\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.wrapWord',\n              schemaPath: '#/properties/wrapWord/type',\n              params: {\n                type: 'boolean'\n              },\n              message: 'should be boolean'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.truncate !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.truncate !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.truncate',\n              schemaPath: '#/properties/truncate/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.paddingLeft !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.paddingLeft !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.paddingLeft',\n              schemaPath: '#/properties/paddingLeft/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n        if (data.paddingRight !== undefined) {\n          var errs_1 = errors;\n          if (typeof data.paddingRight !== \"number\") {\n            var err = {\n              keyword: 'type',\n              dataPath: (dataPath || '') + '.paddingRight',\n              schemaPath: '#/properties/paddingRight/type',\n              params: {\n                type: 'number'\n              },\n              message: 'should be number'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          }\n          var valid1 = errors === errs_1;\n        }\n      } else {\n        var err = {\n          keyword: 'type',\n          dataPath: (dataPath || '') + \"\",\n          schemaPath: '#/type',\n          params: {\n            type: 'object'\n          },\n          message: 'should be object'\n        };\n        if (vErrors === null) vErrors = [err];\n        else vErrors.push(err);\n        errors++;\n      }\n      validate.errors = vErrors;\n      return errors === 0;\n    };\n  })();\n  refVal4.schema = {\n    \"type\": \"object\",\n    \"properties\": {\n      \"alignment\": {\n        \"type\": \"string\",\n        \"enum\": [\"left\", \"right\", \"center\"]\n      },\n      \"width\": {\n        \"type\": \"number\"\n      },\n      \"wrapWord\": {\n        \"type\": \"boolean\"\n      },\n      \"truncate\": {\n        \"type\": \"number\"\n      },\n      \"paddingLeft\": {\n        \"type\": \"number\"\n      },\n      \"paddingRight\": {\n        \"type\": \"number\"\n      }\n    },\n    \"additionalProperties\": false\n  };\n  refVal4.errors = null;\n  refVal[4] = refVal4;\n  return function validate(data, dataPath, parentData, parentDataProperty, rootData) {\n    'use strict';\n    var vErrors = null;\n    var errors = 0;\n    if (rootData === undefined) rootData = data;\n    if ((data && typeof data === \"object\" && !Array.isArray(data))) {\n      var errs__0 = errors;\n      var valid1 = true;\n      for (var key0 in data) {\n        var isAdditional0 = !(false || key0 == 'border' || key0 == 'columns' || key0 == 'columnDefault' || key0 == 'drawHorizontalLine');\n        if (isAdditional0) {\n          valid1 = false;\n          var err = {\n            keyword: 'additionalProperties',\n            dataPath: (dataPath || '') + \"\",\n            schemaPath: '#/additionalProperties',\n            params: {\n              additionalProperty: '' + key0 + ''\n            },\n            message: 'should NOT have additional properties'\n          };\n          if (vErrors === null) vErrors = [err];\n          else vErrors.push(err);\n          errors++;\n        }\n      }\n      if (data.border !== undefined) {\n        var errs_1 = errors;\n        if (!refVal1(data.border, (dataPath || '') + '.border', data, 'border', rootData)) {\n          if (vErrors === null) vErrors = refVal1.errors;\n          else vErrors = vErrors.concat(refVal1.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.columns !== undefined) {\n        var errs_1 = errors;\n        if (!refVal3(data.columns, (dataPath || '') + '.columns', data, 'columns', rootData)) {\n          if (vErrors === null) vErrors = refVal3.errors;\n          else vErrors = vErrors.concat(refVal3.errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.columnDefault !== undefined) {\n        var errs_1 = errors;\n        if (!refVal[4](data.columnDefault, (dataPath || '') + '.columnDefault', data, 'columnDefault', rootData)) {\n          if (vErrors === null) vErrors = refVal[4].errors;\n          else vErrors = vErrors.concat(refVal[4].errors);\n          errors = vErrors.length;\n        }\n        var valid1 = errors === errs_1;\n      }\n      if (data.drawHorizontalLine !== undefined) {\n        var errs_1 = errors;\n        var errs__1 = errors;\n        var valid1;\n        if (!(typeof data.drawHorizontalLine == \"function\")) {\n          if (errs__1 == errors) {\n            var err = {\n              keyword: 'typeof',\n              dataPath: (dataPath || '') + '.drawHorizontalLine',\n              schemaPath: '#/properties/drawHorizontalLine/typeof',\n              params: {\n                keyword: 'typeof'\n              },\n              message: 'should pass \"typeof\" keyword validation'\n            };\n            if (vErrors === null) vErrors = [err];\n            else vErrors.push(err);\n            errors++;\n          } else {\n            for (var i1 = errs__1; i1 < errors; i1++) {\n              var ruleErr1 = vErrors[i1];\n              if (ruleErr1.dataPath === undefined) {\n                ruleErr1.dataPath = (dataPath || '') + '.drawHorizontalLine';\n              }\n              if (ruleErr1.schemaPath === undefined) {\n                ruleErr1.schemaPath = \"#/properties/drawHorizontalLine/typeof\";\n              }\n            }\n          }\n        }\n        var valid1 = errors === errs_1;\n      }\n    } else {\n      var err = {\n        keyword: 'type',\n        dataPath: (dataPath || '') + \"\",\n        schemaPath: '#/type',\n        params: {\n          type: 'object'\n        },\n        message: 'should be object'\n      };\n      if (vErrors === null) vErrors = [err];\n      else vErrors.push(err);\n      errors++;\n    }\n    validate.errors = vErrors;\n    return errors === 0;\n  };\n})();\nvalidate.schema = {\n  \"id\": \"config.json\",\n  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"border\": {\n      \"$ref\": \"#/definitions/borders\"\n    },\n    \"columns\": {\n      \"$ref\": \"#/definitions/columns\"\n    },\n    \"columnDefault\": {\n      \"$ref\": \"#/definitions/column\"\n    },\n    \"drawHorizontalLine\": {\n      \"typeof\": \"function\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"definitions\": {\n    \"columns\": {\n      \"type\": \"object\",\n      \"patternProperties\": {\n        \"^[0-9]+$\": {\n          \"$ref\": \"#/definitions/column\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"column\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"alignment\": {\n          \"type\": \"string\",\n          \"enum\": [\"left\", \"right\", \"center\"]\n        },\n        \"width\": {\n          \"type\": \"number\"\n        },\n        \"wrapWord\": {\n          \"type\": \"boolean\"\n        },\n        \"truncate\": {\n          \"type\": \"number\"\n        },\n        \"paddingLeft\": {\n          \"type\": \"number\"\n        },\n        \"paddingRight\": {\n          \"type\": \"number\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"borders\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"topBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n          \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n          \"$ref\": \"#/definitions/border\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"border\": {\n      \"type\": \"string\"\n    }\n  }\n};\nvalidate.errors = null;\nmodule.exports = validate;","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/calculateMaximumColumnWidthIndex.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _calculateCellWidthIndex = require('./calculateCellWidthIndex');\n\nvar _calculateCellWidthIndex2 = _interopRequireDefault(_calculateCellWidthIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Produces an array of values that describe the largest value length (width) in every column.\n *\n * @param {Array[]} rows\n * @returns {number[]}\n */\nexports.default = rows => {\n  if (!rows[0]) {\n    throw new Error('Dataset must have at least one row.');\n  }\n\n  const columns = _lodash2.default.fill(Array(rows[0].length), 0);\n\n  _lodash2.default.forEach(rows, row => {\n    const columnWidthIndex = (0, _calculateCellWidthIndex2.default)(row);\n\n    _lodash2.default.forEach(columnWidthIndex, (valueWidth, index0) => {\n      if (columns[index0] < valueWidth) {\n        columns[index0] = valueWidth;\n      }\n    });\n  });\n\n  return columns;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/calculateRowHeightIndex.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _calculateCellHeight = require('./calculateCellHeight');\n\nvar _calculateCellHeight2 = _interopRequireDefault(_calculateCellHeight);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Calculates the vertical row span index.\n *\n * @param {Array[]} rows\n * @param {Object} config\n * @returns {number[]}\n */\nexports.default = (rows, config) => {\n  const tableWidth = rows[0].length;\n\n  const rowSpanIndex = [];\n\n  _lodash2.default.forEach(rows, cells => {\n    const cellHeightIndex = _lodash2.default.fill(Array(tableWidth), 1);\n\n    _lodash2.default.forEach(cells, (value, index1) => {\n      if (!_lodash2.default.isNumber(config.columns[index1].width)) {\n        throw new Error('column[index].width must be a number.');\n      }\n\n      if (!_lodash2.default.isBoolean(config.columns[index1].wrapWord)) {\n        throw new Error('column[index].wrapWord must be a boolean.');\n      }\n\n      cellHeightIndex[index1] = (0, _calculateCellHeight2.default)(value, config.columns[index1].width, config.columns[index1].wrapWord);\n    });\n\n    rowSpanIndex.push(_lodash2.default.max(cellHeightIndex));\n  });\n\n  return rowSpanIndex;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/calculateCellHeight.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nvar _wrapWord = require('./wrapWord');\n\nvar _wrapWord2 = _interopRequireDefault(_wrapWord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {string} value\n * @param {number} columnWidth\n * @param {boolean} useWrapWord\n * @returns {number}\n */\nexports.default = function (value, columnWidth) {\n  let useWrapWord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  if (!_lodash2.default.isString(value)) {\n    throw new Error('Value must be a string.');\n  }\n\n  if (!_lodash2.default.isInteger(columnWidth)) {\n    throw new Error('Column width must be an integer.');\n  }\n\n  if (columnWidth < 1) {\n    throw new Error('Column width must be greater than 0.');\n  }\n\n  if (useWrapWord) {\n    return (0, _wrapWord2.default)(value, columnWidth).length;\n  }\n\n  return _lodash2.default.ceil((0, _stringWidth2.default)(value) / columnWidth);\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/wrapWord.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sliceAnsi = require('slice-ansi');\n\nvar _sliceAnsi2 = _interopRequireDefault(_sliceAnsi);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {string} input\n * @param {number} size\n * @returns {Array}\n */\nexports.default = (input, size) => {\n  let subject;\n\n  subject = input;\n\n  const chunks = [];\n\n  // https://regex101.com/r/gY5kZ1/1\n  const re = new RegExp('(^.{1,' + size + '}(\\\\s+|$))|(^.{1,' + (size - 1) + '}(\\\\\\\\|/|_|\\\\.|,|;|-))');\n\n  do {\n    let chunk;\n\n    chunk = subject.match(re);\n\n    if (chunk) {\n      chunk = chunk[0];\n\n      subject = (0, _sliceAnsi2.default)(subject, (0, _stringWidth2.default)(chunk));\n\n      chunk = _lodash2.default.trim(chunk);\n    } else {\n      chunk = (0, _sliceAnsi2.default)(subject, 0, size);\n      subject = (0, _sliceAnsi2.default)(subject, size);\n    }\n\n    chunks.push(chunk);\n  } while ((0, _stringWidth2.default)(subject));\n\n  return chunks;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/mapDataUsingRowHeightIndex.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _wrapString = require('./wrapString');\n\nvar _wrapString2 = _interopRequireDefault(_wrapString);\n\nvar _wrapWord = require('./wrapWord');\n\nvar _wrapWord2 = _interopRequireDefault(_wrapWord);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} unmappedRows\n * @param {number[]} rowHeightIndex\n * @param {Object} config\n * @returns {Array}\n */\nexports.default = (unmappedRows, rowHeightIndex, config) => {\n  const tableWidth = unmappedRows[0].length;\n\n  const mappedRows = _lodash2.default.map(unmappedRows, (cells, index0) => {\n    const rowHeight = _lodash2.default.times(rowHeightIndex[index0], () => {\n      return _lodash2.default.fill(Array(tableWidth), '');\n    });\n\n    // rowHeight\n    //     [{row index within rowSaw; index2}]\n    //     [{cell index within a virtual row; index1}]\n\n    _lodash2.default.forEach(cells, (value, index1) => {\n      let chunkedValue;\n\n      if (config.columns[index1].wrapWord) {\n        chunkedValue = (0, _wrapWord2.default)(value, config.columns[index1].width);\n      } else {\n        chunkedValue = (0, _wrapString2.default)(value, config.columns[index1].width);\n      }\n\n      _lodash2.default.forEach(chunkedValue, (part, index2) => {\n        rowHeight[index2][index1] = part;\n      });\n    });\n\n    return rowHeight;\n  });\n\n  return _lodash2.default.flatten(mappedRows);\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/wrapString.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _sliceAnsi = require('slice-ansi');\n\nvar _sliceAnsi2 = _interopRequireDefault(_sliceAnsi);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n * @param {string} subject\n * @param {number} size\n * @returns {Array}\n */\nexports.default = (subject, size) => {\n  let subjectSlice;\n\n  subjectSlice = subject;\n\n  const chunks = [];\n\n  do {\n    chunks.push((0, _sliceAnsi2.default)(subjectSlice, 0, size));\n\n    subjectSlice = _lodash2.default.trim((0, _sliceAnsi2.default)(subjectSlice, size));\n  } while ((0, _stringWidth2.default)(subjectSlice));\n\n  return chunks;\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/alignTableData.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nvar _alignString = require('./alignString');\n\nvar _alignString2 = _interopRequireDefault(_alignString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nexports.default = (rows, config) => {\n  return _lodash2.default.map(rows, cells => {\n    return _lodash2.default.map(cells, (value, index1) => {\n      const column = config.columns[index1];\n\n      if ((0, _stringWidth2.default)(value) === column.width) {\n        return value;\n      } else {\n        return (0, _alignString2.default)(value, column.width, column.alignment);\n      }\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/alignString.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst alignments = ['left', 'right', 'center'];\n\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\nconst alignLeft = (subject, width) => {\n  return subject + _lodash2.default.repeat(' ', width);\n};\n\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\nconst alignRight = (subject, width) => {\n  return _lodash2.default.repeat(' ', width) + subject;\n};\n\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\nconst alignCenter = (subject, width) => {\n  let halfWidth;\n\n  halfWidth = width / 2;\n\n  if (halfWidth % 2 === 0) {\n    return _lodash2.default.repeat(' ', halfWidth) + subject + _lodash2.default.repeat(' ', halfWidth);\n  } else {\n    halfWidth = _lodash2.default.floor(halfWidth);\n\n    return _lodash2.default.repeat(' ', halfWidth) + subject + _lodash2.default.repeat(' ', halfWidth + 1);\n  }\n};\n\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n *\n * @param {string} subject\n * @param {number} containerWidth\n * @param {string} alignment One of the valid options (left, right, center).\n * @returns {string}\n */\n\nexports.default = (subject, containerWidth, alignment) => {\n  if (!_lodash2.default.isString(subject)) {\n    throw new Error('Subject parameter value must be a string.');\n  }\n\n  if (!_lodash2.default.isNumber(containerWidth)) {\n    throw new Error('Container width parameter value must be a number.');\n  }\n\n  const subjectWidth = (0, _stringWidth2.default)(subject);\n\n  if (subjectWidth > containerWidth) {\n    // console.log('subjectWidth', subjectWidth, 'containerWidth', containerWidth, 'subject', subject);\n\n    throw new Error('Subject parameter value width cannot be greater than the container width.');\n  }\n\n  if (!_lodash2.default.isString(alignment)) {\n    throw new Error('Alignment parameter value must be a string.');\n  }\n\n  if (alignments.indexOf(alignment) === -1) {\n    throw new Error('Alignment parameter value must be a known alignment parameter value (left, right, center).');\n  }\n\n  if (subjectWidth === 0) {\n    return _lodash2.default.repeat(' ', containerWidth);\n  }\n\n  const availableWidth = containerWidth - subjectWidth;\n\n  if (alignment === 'left') {\n    return alignLeft(subject, availableWidth);\n  }\n\n  if (alignment === 'right') {\n    return alignRight(subject, availableWidth);\n  }\n\n  return alignCenter(subject, availableWidth);\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/padTableData.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nexports.default = (rows, config) => {\n  return _lodash2.default.map(rows, cells => {\n    return _lodash2.default.map(cells, (value, index1) => {\n      const column = config.columns[index1];\n\n      return _lodash2.default.repeat(' ', column.paddingLeft) + value + _lodash2.default.repeat(' ', column.paddingRight);\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/validateTableData.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {string} cell\n */\n\n/**\n * @typedef {cell[]} validateData~column\n */\n\n/**\n * @param {column[]} rows\n * @returns {undefined}\n */\nexports.default = rows => {\n  if (!_lodash2.default.isArray(rows)) {\n    throw new Error('Table data must be an array.');\n  }\n\n  if (rows.length === 0) {\n    throw new Error('Table must define at least one row.');\n  }\n\n  if (rows[0].length === 0) {\n    throw new Error('Table must define at least one column.');\n  }\n\n  const columnNumber = rows[0].length;\n\n  _lodash2.default.forEach(rows, cells => {\n    if (!_lodash2.default.isArray(cells)) {\n      throw new Error('Table row data must be an array.');\n    }\n\n    if (cells.length !== columnNumber) {\n      throw new Error('Table must have a consistent number of cells.');\n    }\n\n    // @todo Make an exception for newline characters.\n    // @see https://github.com/gajus/table/issues/9\n    _lodash2.default.forEach(cells, cell => {\n      if (/[\\x01-\\x1A]/.test(cell)) {\n        throw new Error('Table data must not contain control characters.');\n      }\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/stringifyTableData.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Casts all cell values to a string.\n *\n * @param {table~row[]} rows\n * @returns {table~row[]}\n */\nexports.default = rows => {\n  return _lodash2.default.map(rows, cells => {\n    return _lodash2.default.map(cells, String);\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/truncateTableData.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @todo Make it work with ASCII content.\n * @param {table~row[]} rows\n * @param {Object} config\n * @returns {table~row[]}\n */\nexports.default = (rows, config) => {\n  return _lodash2.default.map(rows, cells => {\n    return _lodash2.default.map(cells, (content, index) => {\n      return _lodash2.default.truncate(content, {\n        length: config.columns[index].truncate\n      });\n    });\n  });\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/createStream.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _makeStreamConfig = require('./makeStreamConfig');\n\nvar _makeStreamConfig2 = _interopRequireDefault(_makeStreamConfig);\n\nvar _drawRow = require('./drawRow');\n\nvar _drawRow2 = _interopRequireDefault(_drawRow);\n\nvar _drawBorder = require('./drawBorder');\n\nvar _stringifyTableData = require('./stringifyTableData');\n\nvar _stringifyTableData2 = _interopRequireDefault(_stringifyTableData);\n\nvar _truncateTableData = require('./truncateTableData');\n\nvar _truncateTableData2 = _interopRequireDefault(_truncateTableData);\n\nvar _mapDataUsingRowHeightIndex = require('./mapDataUsingRowHeightIndex');\n\nvar _mapDataUsingRowHeightIndex2 = _interopRequireDefault(_mapDataUsingRowHeightIndex);\n\nvar _alignTableData = require('./alignTableData');\n\nvar _alignTableData2 = _interopRequireDefault(_alignTableData);\n\nvar _padTableData = require('./padTableData');\n\nvar _padTableData2 = _interopRequireDefault(_padTableData);\n\nvar _calculateRowHeightIndex = require('./calculateRowHeightIndex');\n\nvar _calculateRowHeightIndex2 = _interopRequireDefault(_calculateRowHeightIndex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} data\n * @param {Object} config\n * @returns {Array}\n */\nconst prepareData = (data, config) => {\n  let rows;\n\n  rows = (0, _stringifyTableData2.default)(data);\n\n  rows = (0, _truncateTableData2.default)(data, config);\n\n  const rowHeightIndex = (0, _calculateRowHeightIndex2.default)(rows, config);\n\n  rows = (0, _mapDataUsingRowHeightIndex2.default)(rows, rowHeightIndex, config);\n  rows = (0, _alignTableData2.default)(rows, config);\n  rows = (0, _padTableData2.default)(rows, config);\n\n  return rows;\n};\n\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\nconst create = (row, columnWidthIndex, config) => {\n  const rows = prepareData([row], config);\n\n  const body = _lodash2.default.map(rows, literalRow => {\n    return (0, _drawRow2.default)(literalRow, config.border);\n  }).join('');\n\n  let output;\n\n  output = '';\n\n  output += (0, _drawBorder.drawBorderTop)(columnWidthIndex, config.border);\n  output += body;\n  output += (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n\n  output = _lodash2.default.trimEnd(output);\n\n  process.stdout.write(output);\n};\n\n/**\n * @param {string[]} row\n * @param {number[]} columnWidthIndex\n * @param {Object} config\n * @returns {undefined}\n */\nconst append = (row, columnWidthIndex, config) => {\n  const rows = prepareData([row], config);\n\n  const body = _lodash2.default.map(rows, literalRow => {\n    return (0, _drawRow2.default)(literalRow, config.border);\n  }).join('');\n\n  let output;\n\n  output = '\\r\\x1b[K';\n\n  output += (0, _drawBorder.drawBorderJoin)(columnWidthIndex, config.border);\n  output += body;\n  output += (0, _drawBorder.drawBorderBottom)(columnWidthIndex, config.border);\n\n  output = _lodash2.default.trimEnd(output);\n\n  process.stdout.write(output);\n};\n\n/**\n * @param {Object} userConfig\n * @returns {Object}\n */\n\nexports.default = function () {\n  let userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const config = (0, _makeStreamConfig2.default)(userConfig);\n\n  const columnWidthIndex = _lodash2.default.mapValues(config.columns, column => {\n    return column.width + column.paddingLeft + column.paddingRight;\n  });\n\n  let empty;\n\n  empty = true;\n\n  return {\n    /**\n     * @param {string[]} row\n     * @returns {undefined}\n     */\n    write: row => {\n      if (row.length !== config.columnCount) {\n        throw new Error('Row cell count does not match the config.columnCount.');\n      }\n\n      if (empty) {\n        empty = false;\n\n        return create(row, columnWidthIndex, config);\n      } else {\n        return append(row, columnWidthIndex, config);\n      }\n    }\n  };\n};","/home/travis/build/npmtest/node-npmtest-table/node_modules/table/dist/makeStreamConfig.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _getBorderCharacters = require('./getBorderCharacters');\n\nvar _getBorderCharacters2 = _interopRequireDefault(_getBorderCharacters);\n\nvar _validateConfig = require('./validateConfig');\n\nvar _validateConfig2 = _interopRequireDefault(_validateConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @param {Object} border\n * @returns {Object}\n */\nconst makeBorder = function makeBorder() {\n  let border = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _lodash2.default.assign({}, (0, _getBorderCharacters2.default)('honeywell'), border);\n};\n\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n *\n * @param {number} columnCount\n * @param {Object} columns\n * @param {Object} columnDefault\n * @returns {Object}\n */\nconst makeColumns = function makeColumns(columnCount) {\n  let columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let columnDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  _lodash2.default.times(columnCount, index => {\n    if (_lodash2.default.isUndefined(columns[index])) {\n      columns[index] = {};\n    }\n\n    columns[index] = _lodash2.default.assign({\n      alignment: 'left',\n      paddingLeft: 1,\n      paddingRight: 1,\n      truncate: Infinity,\n      wrapWord: false\n    }, columnDefault, columns[index]);\n  });\n\n  return columns;\n};\n\n/**\n * @typedef {Object} columnConfig\n * @property {string} alignment\n * @property {number} width\n * @property {number} truncate\n * @property {number} paddingLeft\n * @property {number} paddingRight\n */\n\n/**\n * @typedef {Object} streamConfig\n * @property {columnConfig} columnDefault\n * @property {Object} border\n * @property {columnConfig[]}\n * @property {number} columnCount Number of columns in the table (required).\n */\n\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n *\n * @param {streamConfig} userConfig\n * @returns {Object}\n */\n\nexports.default = function () {\n  let userConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _validateConfig2.default)('streamConfig.json', userConfig);\n\n  const config = _lodash2.default.cloneDeep(userConfig);\n\n  if (!config.columnDefault || !config.columnDefault.width) {\n    throw new Error('Must provide config.columnDefault.width when creating a stream.');\n  }\n\n  if (!config.columnCount) {\n    throw new Error('Must provide config.columnCount.');\n  }\n\n  config.border = makeBorder(config.border);\n  config.columns = makeColumns(config.columnCount, config.columns, config.columnDefault);\n\n  return config;\n};"}